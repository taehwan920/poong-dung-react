{"version":3,"sources":["pages/Components/Drop.js","pages/HomeComponents/Temperature.js","pages/Components/Background.js","pages/Components/Footer.js","pages/Home.js","pages/StatisticsComponents/Canvas.js","pages/StatisticsComponents/StatisticsDetail.js","pages/StatisticsHome.js","pages/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["className","React","Component","state","time","temperature","isLoading","errorOccured","getTemperature","a","axios","get","data","latest","setState","to","this","renderRedirect","href","target","errorOccurred","Standard","canvasHeight","frameStartX","frameEndX","frameStartY","frameEndY","frameIntervalY","frameLineWidth","frameStrokeStyle","textFillStyle","dailyColor","monthlyColor","colorLineWidth","tickEndY","tickStartY","tickStartX","tickIntervalX","tickEndX","DrawGraph","ctx","gph","endX","intervalX","intervalY","startY","stdY","Axios","dailyJSON","dailyDatas","dailyTemps","map","item","dailyXYs","i","length","dailyTemp","tempCheck","dailyX","dailyY","Number","toFixed","drawPoint","push","X","Y","drawLine","monthlyJSON","monthlyDatas","monthlyTemps","monthlyXYs","monthlyX","monthlyY","reverse","onCanvas","document","querySelector","tempBox","querySelectorAll","box1","box2","coorX","0","1","2","3","4","5","6","7","save","addEventListener","e","mouseX","offsetX","key","console","log","numKey","forEach","box","classList","add","style","setProperty","innerHTML","remove","gphAxis","startX","endY","temps","j","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","closePath","font","textAlign","textBaseline","fillStyle","fillText","eg","textX","StartX","EndX","positionY1","positionY2","tick","notNow","temp","num","bool","arc","Math","PI","fill","arr","leftEnd","canvas","getContext","width","height","Title","LineColor","AxisX","TickAndParams","id","exact","path","component","Home","StatisticsHome","ErrorPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.065ae391.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bg-drop\">\r\n                <i className=\"fas fa-tint\"></i>\r\n            </div>\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport axios from 'axios';\r\nimport Drop from '../Components/Drop';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        time: 0,\r\n        temperature: 0,\r\n        isLoading: false,\r\n        errorOccured: false\r\n    }\r\n\r\n    renderRedirect() {\r\n        return (\r\n            <Redirect to=\"/error\" />\r\n        )\r\n    }\r\n\r\n    getTemperature = async () => {\r\n        const endpoint = `http://localhost:8080/db/1/1`;\r\n        const data = await axios.get(endpoint);\r\n        const latest = data.data[0]\r\n        const temperature = latest.temperature;\r\n        const time = latest.time;\r\n        temperature && time\r\n            ? this.setState({\r\n                time,\r\n                temperature,\r\n                isLoading: true\r\n            })\r\n            : this.setState({\r\n                errorOccured: true\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTemperature();\r\n    }\r\n\r\n    render() {\r\n        const temperature = this.state.temperature;\r\n        const time = this.state.time;\r\n        return (\r\n            <article className=\"temp\">\r\n                {this.state.errorOccured\r\n                    ? this.renderRedirect()\r\n                    : this.state.isLoading\r\n                        ? [\r\n                            <span className=\"temp__now\">지 금 한 강 은...</span>,\r\n                            <span className=\"temp__temp\">{temperature}℃</span>,\r\n                            <div className=\"temp__toStatistics\">\r\n                                <a href=\"/statistics\" className=\"statistics__link\">\r\n                                    통계 보기\r\n                            </a>\r\n                            </div>,\r\n                            <div className=\"temp__standard\">오늘 {time < 10 ? `0${time}` : time}시, 중랑천 기준</div>,\r\n                            <Drop></Drop>\r\n                        ]\r\n                        : 'Loading...'}\r\n            </article>\r\n        )\r\n    }\r\n};","import React from 'react';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home__bg\"></div>\r\n        )\r\n    }\r\n};","import React from 'react';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"home__footer\">\r\n                <a target=\"blank\" href=\"https://github.com/taehwan920/poong-dung-react\">\r\n                    <i className=\"fab fa-github\"></i>\r\n                </a>\r\n            </footer>\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport Temperature from './HomeComponents/Temperature';\r\nimport Background from './Components/Background';\r\nimport Footer from './Components/Footer';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <main className=\"home\">\r\n                <Temperature></Temperature>\r\n                <Background></Background>\r\n                <Footer></Footer>\r\n            </main>\r\n        );\r\n    }\r\n};\r\n","import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        errorOccurred: false\r\n    }\r\n\r\n    renderRedirect() {\r\n        return (\r\n            <Redirect to=\"/error\" />\r\n        )\r\n    }\r\n\r\n    Standard = {\r\n        canvasHeight: 500,\r\n        frameStartX: 100,\r\n        frameEndX: 900,\r\n        frameStartY: 125,\r\n        frameEndY: 425,\r\n        frameIntervalY: 60,\r\n        frameLineWidth: 2,\r\n        frameStrokeStyle: 'rgba(255, 255, 255, 0.5)',\r\n        textFillStyle: 'rgba(255, 255, 255, 1)',\r\n        dailyColor: '#C5F895',\r\n        monthlyColor: '#9972AE',\r\n        colorLineWidth: 3,\r\n        tickEndY: 430,\r\n        tickStartY: 420,\r\n        tickStartX: 200, /* this.frameStartX + 100 */\r\n        tickIntervalX: 87.5, /* (this.frameEndX - 200) / 8 */\r\n        tickEndX: 812.5, /* this.frameEndX - this.tickInterval */\r\n    };\r\n\r\n    AxisX(ctx) {\r\n        const gphAxis = {\r\n            startX: this.Standard.frameStartX,\r\n            endX: this.Standard.frameEndX,\r\n            startY: this.Standard.frameStartY,\r\n            endY: this.Standard.frameEndY,\r\n            intervalY: this.Standard.frameIntervalY\r\n        }\r\n\r\n        const temps = ['0℃', '5℃', '10℃', '15℃', '20℃', '25℃'];\r\n\r\n        for (let i = gphAxis.endY, j = 0; i >= gphAxis.startY; i -= gphAxis.intervalY, j++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(gphAxis.startX, i);\r\n            ctx.lineTo(gphAxis.endX, i);\r\n            ctx.lineWidth = this.Standard.frameLineWidth;\r\n            ctx.strokeStyle = this.Standard.frameStrokeStyle;\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n            //temperature parameter\r\n            ctx.font = '15.5px sans-serif';\r\n            ctx.textAlign = 'end';\r\n            ctx.textBaseline = 'middle'\r\n            ctx.fillStyle = this.Standard.textFillStyle\r\n            ctx.fillText(temps[j], gphAxis.startX - 10, i);\r\n        };\r\n    };\r\n\r\n\r\n\r\n\r\n    Title(ctx) {\r\n        ctx.font = '32px sans-serif';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillStyle = this.Standard.textFillStyle;\r\n        ctx.fillText('한강 수온 통계 그래프', 500, 58);\r\n    };\r\n\r\n    LineColor(ctx) {\r\n        const eg = {\r\n            dailyColor: this.Standard.dailyColor,\r\n            monthlyColor: this.Standard.monthlyColor,\r\n            textX: 940,\r\n            StartX: 800,\r\n            EndX: 840,\r\n            lineWidth: this.Standard.colorLineWidth,\r\n            positionY1: 30,\r\n            positionY2: 60\r\n        }\r\n\r\n        ctx.font = '12px sans-serif';\r\n        ctx.textAlign = 'end';\r\n        ctx.textBaseline = 'middle'\r\n        ctx.fillStyle = this.Standard.textFillStyle;\r\n        ctx.fillText('일일 변동 수온', eg.textX, eg.positionY1);\r\n        ctx.fillText('전월 변동 수온', eg.textX, eg.positionY2);\r\n\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(eg.StartX, eg.positionY1);\r\n        ctx.lineTo(eg.EndX, eg.positionY1);\r\n        ctx.lineWidth = eg.lineWidth;\r\n        ctx.strokeStyle = eg.dailyColor;\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(eg.StartX, eg.positionY2);\r\n        ctx.lineTo(eg.EndX, eg.positionY2);\r\n        ctx.lineWidth = eg.lineWidth;\r\n        ctx.strokeStyle = eg.monthlyColor;\r\n        ctx.stroke();\r\n    };\r\n\r\n    TickAndParams(ctx) {\r\n        //hours ticks\r\n        const tick = {\r\n            startX: this.Standard.tickStartX,\r\n            endX: this.Standard.tickEndX,\r\n            intervalX: this.Standard.tickIntervalX,\r\n            startY: this.Standard.tickStartY,\r\n            endY: this.Standard.tickEndY\r\n        }\r\n        const notNow = tick.startX\r\n\r\n        for (let i = tick.startX, j = 48; i <= tick.endX; i += tick.intervalX, j -= 6) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(i, tick.endY);\r\n            ctx.lineTo(i, tick.startY);\r\n            ctx.lineWidth = this.Standard.frameLineWidth;\r\n            ctx.strokeStyle = this.Standard.frameStrokeStyle;\r\n            ctx.stroke();\r\n\r\n            if (i !== notNow) {\r\n                ctx.font = '15.5px sans-serif';\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle'\r\n                ctx.fillStyle = this.Standard.textFillStyle\r\n                ctx.fillText(`${j}시간 전`, i - tick.intervalX, tick.endY + 20);\r\n            } else {\r\n                ctx.font = '15.5px sans-serif';\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle'\r\n                ctx.fillStyle = this.Standard.textFillStyle\r\n                ctx.fillText(`지금`, tick.endX, tick.endY + 20);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    DrawGraph = async (ctx) => {\r\n        try {\r\n            const gph = {\r\n                endX: this.Standard.tickEndX,\r\n                intervalX: this.Standard.tickIntervalX,\r\n                intervalY: this.Standard.frameIntervalY,\r\n                startY: this.Standard.frameStartY,\r\n                stdY: this.Standard.frameEndY - this.Standard.frameStartY\r\n            };\r\n\r\n            const dailyEndpoint = `http://localhost:8080/db/1/8`;\r\n            const dailyJSON = await Axios.get(dailyEndpoint);\r\n            const dailyDatas = dailyJSON.data;\r\n            const dailyTemps = dailyDatas.map(item => item.temperature);\r\n\r\n            const dailyXYs = [];\r\n\r\n            for (let i = 0; i < dailyTemps.length; i++) {\r\n                const dailyTemp = this.tempCheck(dailyTemps[i], i);\r\n                let dailyX = gph.endX - (gph.intervalX * i)\r\n                let dailyY = Number(((gph.intervalY * (25 - dailyTemp) / 5) + gph.startY).toFixed(1));\r\n                if (i === 0) {\r\n                    dailyX = gph.endX\r\n                }\r\n                this.drawPoint(ctx, dailyX, dailyY, true);\r\n                dailyXYs.push({ X: dailyX, Y: dailyY });\r\n            };\r\n            this.drawLine(ctx, dailyXYs, true);\r\n\r\n            const monthlyEndpoint = `http://localhost:8080/db/125/132`;\r\n            const monthlyJSON = await Axios.get(monthlyEndpoint);\r\n            const monthlyDatas = monthlyJSON.data;\r\n            const monthlyTemps = monthlyDatas.map(item => item.temperature);\r\n\r\n            const monthlyXYs = [];\r\n\r\n            for (let i = 0; i < monthlyTemps.length; i++) {\r\n                const dailyTemp = this.tempCheck(monthlyTemps[i], i);\r\n                let monthlyX = gph.endX - (gph.intervalX * i)\r\n                let monthlyY = Number(((gph.intervalY * (25 - dailyTemp) / 5) + gph.startY).toFixed(1));\r\n                if (i === 0) {\r\n                    monthlyX = gph.endX\r\n                }\r\n                this.drawPoint(ctx, monthlyX, monthlyY, false);\r\n                monthlyXYs.push({ X: monthlyX, Y: monthlyY });\r\n            };\r\n            this.drawLine(ctx, monthlyXYs, false);\r\n\r\n\r\n            dailyXYs.reverse();\r\n            dailyTemps.reverse();\r\n            monthlyXYs.reverse();\r\n            monthlyTemps.reverse();\r\n            const onCanvas = document.querySelector('#statistics');\r\n            const tempBox = document.querySelectorAll('.sta-temp');\r\n            const box1 = document.querySelector('.sta-box1');\r\n            const box2 = document.querySelector('.sta-box2');\r\n            if (onCanvas) {\r\n                const coorX = {\r\n                    0: [this.Standard.frameStartX, dailyXYs[0].X],\r\n                    1: [dailyXYs[0].X, dailyXYs[1].X],\r\n                    2: [dailyXYs[1].X, dailyXYs[2].X],\r\n                    3: [dailyXYs[2].X, dailyXYs[3].X],\r\n                    4: [dailyXYs[3].X, dailyXYs[4].X],\r\n                    5: [dailyXYs[4].X, dailyXYs[5].X],\r\n                    6: [dailyXYs[5].X, dailyXYs[6].X],\r\n                    7: [dailyXYs[6].X, this.Standard.frameEndX]\r\n                }\r\n                ctx.save();\r\n                onCanvas.addEventListener('mousemove', (e) => {\r\n                    const mouseX = e.offsetX;\r\n                    for (const key in coorX) {\r\n                        if (mouseX > coorX[key][0] && mouseX <= coorX[key][1]) {\r\n                            console.log(mouseX);\r\n                            const numKey = Number(key);\r\n                            tempBox.forEach(box => {\r\n                                box.classList.add('sta-visualize');\r\n                            });\r\n                            box1.style.setProperty('top', `${dailyXYs[numKey].Y - 42.5}px`);\r\n                            box1.style.setProperty('left', `${dailyXYs[numKey].X - 85}px`);\r\n                            box1.innerHTML = `${dailyTemps[key]}℃`;\r\n                            box2.style.setProperty('top', `${monthlyXYs[numKey].Y + 10}px`);\r\n                            box2.style.setProperty('left', `${monthlyXYs[numKey].X + 10}px`);\r\n                            box2.innerHTML = `${monthlyTemps[key]}℃`;\r\n                        }\r\n                    };\r\n                });\r\n                onCanvas.addEventListener('mouseleave', () => {\r\n                    tempBox.forEach(box => { box.classList.remove('sta-visualize') })\r\n                });\r\n            };\r\n        } catch {\r\n            this.setState({ errorOccurred: true });\r\n        }\r\n    }\r\n\r\n    tempCheck(temp, num) {\r\n        if (temp === 99.9) {\r\n            temp[num - 1]\r\n                ? temp[num].temperature = temp[num - 1].temperature\r\n                : temp[num].temperature = temp[num + 1].temperature;\r\n        } else {\r\n            return temp;\r\n        }\r\n    };\r\n\r\n    drawPoint(ctx, X, Y, bool) {\r\n        ctx.beginPath();\r\n        ctx.arc(X, Y, 6, Y - 5, Math.PI, true);\r\n        ctx.fillStyle = bool ? this.Standard.dailyColor : this.Standard.monthlyColor;\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    drawLine(ctx, arr, bool) {\r\n        let leftEnd = arr[0];\r\n\r\n        for (let i = 1; i < arr.length; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(leftEnd.X, leftEnd.Y);\r\n            leftEnd = arr[i]\r\n            ctx.lineTo(leftEnd.X, leftEnd.Y);\r\n            ctx.lineWidth = 4;\r\n            ctx.strokeStyle = bool ? this.Standard.dailyColor : this.Standard.monthlyColor;\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const canvas = document.querySelector(\"#statistics\");\r\n        if (canvas) {\r\n            const ctx = canvas.getContext(\"2d\");\r\n            canvas.width = 1000;\r\n            canvas.height = 500;\r\n\r\n            this.DrawGraph(ctx);\r\n            this.Title(ctx);\r\n            this.LineColor(ctx);\r\n            this.AxisX(ctx);\r\n            this.TickAndParams(ctx);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sta-tempBox\">\r\n                {this.state.errorOccurred\r\n                    ? this.renderRedirect()\r\n                    : [\r\n                        <canvas id=\"statistics\"></canvas>,\r\n                        <div className=\"sta-box1 sta-temp\">d</div>,\r\n                        <div className=\"sta-box2 sta-temp\">d</div>\r\n                    ]}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Drop from '../Components/Drop';\r\nimport Canvas from './Canvas';\r\n\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <main className=\"temp\">\r\n                <Canvas></Canvas>\r\n                <div className=\"temp__toStatistics\">\r\n                    <a href=\"/\" className=\"statistics__link\">\r\n                        홈으로\r\n                    </a>\r\n                </div>\r\n                <Drop></Drop>\r\n            </main >\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport Background from './Components/Background';\r\nimport Footer from './Components/Footer';\r\nimport Daily from './StatisticsComponents/StatisticsDetail';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <main className=\"home\">\r\n                <Daily></Daily>\r\n                <Background></Background>\r\n                <Footer></Footer>\r\n            </main>\r\n        )\r\n    }\r\n};","import React from 'react';\r\nimport Background from './Components/Background';\r\nimport Footer from './Components/Footer';\r\nimport Drop from './Components/Drop';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <center className=\"home\">\r\n                <div className=\"temp\">\r\n                    <span className=\"error-message\">수온 데이터를 불러올 수 없습니다.</span>\r\n                    <div className=\"temp__toStatistics\">\r\n                        <a href=\"/\" className=\"statistics__link\">\r\n                            홈으로\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <Background></Background>\r\n                <Footer></Footer>\r\n                <Drop></Drop>\r\n            </center>\r\n        )\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport StatisticsHome from './pages/StatisticsHome';\nimport ErrorPage from './pages/ErrorPage';\n\nexport default () => (\n  <Router>\n    <Route exact path='/' component={Home} />\n    <Route exact path='/statistics' component={StatisticsHome} />\n    <Route exact path='/error' component={ErrorPage} />\n  </Router>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/styles.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}